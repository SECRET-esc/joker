apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: "androidx.navigation.safeargs.kotlin"

apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

ext {
    URL_WEBVIEW_DEV = '"https://develop.pokerdom.dev"' // dev
    URL_WEBVIEW_PROD = '"https://android.g2slt.com"' // prod
    URL_HOST_TOKEN_DEV = '"https://s.dev1.btcasino.com/"'
    URL_HOST_TOKEN_PROD = '"https://s.playgames.casino/"'
}

android {
    signingConfigs {
        release {
            storeFile file('..\\keys\\key.jks')
            keyPassword '123123'
            keyAlias 'com.pd.pokerdom'
            storePassword '123123'
        }
    }

    compileSdkVersion 29
    defaultConfig {
        applicationId "com.pd.pokerdom"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled true
//            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    flavorDimensions "version"
    productFlavors {
        dev {
            dimension "version"
            buildConfigField("String", "URL_WEBVIEW", URL_WEBVIEW_DEV)
            buildConfigField("String", "URL_HOST_TOKEN", URL_HOST_TOKEN_DEV)
        }
        prod {
            dimension "version"
            buildConfigField("String", "URL_WEBVIEW", URL_WEBVIEW_PROD)
            buildConfigField("String", "URL_HOST_TOKEN", URL_HOST_TOKEN_PROD)
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all { output ->
            outputFileName = "${variant.applicationId}_${variant.buildType.name}" +
                    "_v${variant.versionName}_${variant.productFlavors.get(0).name}.apk"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    androidExtensions {
        experimental = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Android
    implementation "androidx.core:core-ktx:1.2.0"
    implementation "com.google.android.material:material:1.1.0"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Lifecycle components: ViewModel and LiveData
//    def lifecycle = '2.2.0'
//    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle"
//    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle"

    // Firebase
    implementation 'com.google.firebase:firebase-core:17.2.3'
    implementation 'com.google.firebase:firebase-analytics:17.2.3'
    implementation 'com.google.firebase:firebase-messaging:20.1.1'
    implementation 'com.google.firebase:firebase-crashlytics:17.0.0-beta01'

    // OkHttp
    def okhttp = '4.4.0'
    implementation "com.squareup.okhttp3:okhttp:$okhttp"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp"

    // Retrofit
    def retrofit = '2.7.1'
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"
    implementation "com.google.code.gson:gson:2.8.6"

    // Glide
    def glide = '4.11.0'
    implementation "com.github.bumptech.glide:glide:$glide"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt "com.github.bumptech.glide:compiler:$glide"

    // Coroutines
    def coroutines = "1.3.3"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"

    // Koin
    def koin = "2.0.1"
    implementation "org.koin:koin-android:$koin"
    implementation "org.koin:koin-android-viewmodel:$koin"

    // WorkManager(Kotlin + coroutines)
    def work_version = "2.3.2"
    implementation "androidx.work:work-runtime-ktx:$work_version"

    // Test
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
